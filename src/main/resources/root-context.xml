<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="classpath:/application.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driver}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxPoolSize" value="100" />
		<property name="maxIdleTime" value="600" />
		<property name="idleConnectionTestPeriod" value="300" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- MyBatis 설정파일 위치 -->
		<property name="configLocation" value="classpath:/mybatis-config.xml" /> 
		<!-- mapper파일 위치 설정 -->    
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" /> 
	</bean>

	<!-- SqlSessionTemplate - 트랜잭션 관리나 쓰레드 처리의안정성을 보장해 주고 데이터베이스의 연결과 종료를 책임지는 클래스 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<!-- 생성자로 주입하여 설정 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 스프링에서 아래 설정한 패키지를 스캔하여 Bean으로 등록 -->
	<context:component-scan base-package="mybatis_c3p0_spring5_study.dao" />

	<context:component-scan base-package="mybatis_c3p0_spring5_study.service" />

	<bean id="erpMain" class="mybatis_c3p0_spring5_study.ErpMain" init-method="initComponent">
		<property name="title" value="erp application" />
	</bean>

	<!-- Spring 트랜잭션 처리 -->
	<bean id = "transactionManager" class = "org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name = "dataSource" ref = "dataSource" /> 
	</bean> 
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
<!-- 	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(* mybatis_c3p0_spring5_study.service.*.*(..))" />
		<aop:advisor id="transactionAdvisor" pointcut-ref="serviceOperation" advice-ref="txAdvice"/>
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="registerTransaction" rollback-for="Exception"/>
			<tx:method name="unRegisterTransaction" rollback-for="Exception"/>
		</tx:attributes> 
	
	</tx:advice>
-->
</beans>
